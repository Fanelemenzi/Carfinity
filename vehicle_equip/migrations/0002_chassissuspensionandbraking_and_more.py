# Generated by Django 4.2.16 on 2025-06-07 19:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("vehicles", "0004_remove_vehicle_color_remove_vehicle_mileage_and_more"),
        ("vehicle_equip", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ChassisSuspensionAndBraking",
            fields=[
                (
                    "vehicle",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="chassis",
                        serialize=False,
                        to="vehicles.vehicle",
                    ),
                ),
                (
                    "front_suspension",
                    models.CharField(
                        choices=[
                            ("MACP", "MacPherson Strut"),
                            ("DUBL", "Double Wishbone"),
                            ("MULT", "Multi-Link"),
                            ("LEAF", "Leaf Spring"),
                            ("AIR", "Air Suspension"),
                            ("ADAP", "Adaptive Suspension"),
                        ],
                        max_length=4,
                        verbose_name="Front Suspension Type",
                    ),
                ),
                (
                    "rear_suspension",
                    models.CharField(
                        choices=[
                            ("MACP", "MacPherson Strut"),
                            ("DUBL", "Double Wishbone"),
                            ("MULT", "Multi-Link"),
                            ("LEAF", "Leaf Spring"),
                            ("AIR", "Air Suspension"),
                            ("ADAP", "Adaptive Suspension"),
                        ],
                        max_length=4,
                        verbose_name="Rear Suspension Type",
                    ),
                ),
                (
                    "front_brake_type",
                    models.CharField(
                        choices=[
                            ("DISC", "Disc Brakes"),
                            ("DRUM", "Drum Brakes"),
                            ("CERM", "Ceramic Discs"),
                            ("CARB", "Carbon Ceramic"),
                        ],
                        max_length=4,
                        verbose_name="Front Brake Type",
                    ),
                ),
                (
                    "rear_brake_type",
                    models.CharField(
                        choices=[
                            ("DISC", "Disc Brakes"),
                            ("DRUM", "Drum Brakes"),
                            ("CERM", "Ceramic Discs"),
                            ("CARB", "Carbon Ceramic"),
                        ],
                        max_length=4,
                        verbose_name="Rear Brake Type",
                    ),
                ),
                (
                    "brake_systems",
                    models.CharField(
                        choices=[
                            ("ABS", "Anti-lock Braking System"),
                            ("EBD", "Electronic Brakeforce Distribution"),
                            ("BAS", "Brake Assist System"),
                            ("REGEN", "Regenerative Braking"),
                        ],
                        max_length=5,
                        verbose_name="Primary Brake System",
                    ),
                ),
                (
                    "parking_brake_type",
                    models.CharField(
                        choices=[
                            ("EPB", "Electronic Parking Brake"),
                            ("MECH", "Mechanical Lever"),
                            ("PEDAL", "Foot Pedal"),
                            ("INTEG", "Integrated with Service Brakes"),
                        ],
                        max_length=5,
                        verbose_name="Parking Brake Type",
                    ),
                ),
                (
                    "steering_system",
                    models.CharField(
                        choices=[
                            ("RACK", "Rack and Pinion"),
                            ("RECIRC", "Recirculating Ball"),
                            ("EPAS", "Electric Power Assist"),
                            ("HPAS", "Hydraulic Power Assist"),
                        ],
                        max_length=6,
                        verbose_name="Steering System Type",
                    ),
                ),
                (
                    "steering_wheel_features",
                    models.CharField(
                        choices=[
                            ("TILT", "Tilt Adjustment"),
                            ("TEL", "Telescopic Adjustment"),
                            ("HEAT", "Heated"),
                            ("PADDLE", "Paddle Shifters"),
                            ("CONTROLS", "Integrated Controls"),
                        ],
                        max_length=30,
                        verbose_name="Steering Wheel Features",
                    ),
                ),
                (
                    "has_park_distance_control",
                    models.BooleanField(
                        default=False, verbose_name="Park Distance Control"
                    ),
                ),
            ],
            options={
                "verbose_name": "Chassis, Suspension & Braking",
                "verbose_name_plural": "Chassis, Suspension & Braking Systems",
            },
        ),
        migrations.RemoveField(
            model_name="powertrainanddrivetrain",
            name="id",
        ),
        migrations.AlterField(
            model_name="powertrainanddrivetrain",
            name="vehicle",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                primary_key=True,
                related_name="powertrain",
                serialize=False,
                to="vehicles.vehicle",
            ),
        ),
    ]
