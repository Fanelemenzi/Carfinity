# Generated by Django 4.2.16 on 2025-05-16 17:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vin", models.CharField(max_length=20, unique=True)),
                ("make", models.CharField(max_length=50)),
                ("model", models.CharField(max_length=50)),
                ("manufacture_year", models.PositiveIntegerField()),
                ("engine_code", models.CharField(blank=True, max_length=20, null=True)),
                ("mileage", models.PositiveIntegerField(default=0)),
                ("purchase_date", models.DateField(blank=True, null=True)),
                (
                    "license_plate",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("color", models.CharField(blank=True, max_length=50, null=True)),
                ("fuel_type", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "transmission_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Vehicle",
                "verbose_name_plural": "Vehicles",
            },
        ),
        migrations.CreateModel(
            name="VehicleOwnership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_current_owner", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_vehicles",
                        to="users.user",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ownerships",
                        to="vehicles.vehicle",
                    ),
                ),
            ],
            options={
                "verbose_name": "Vehicle Onwership",
                "verbose_name_plural": "Vehicle Onwership",
            },
        ),
        migrations.CreateModel(
            name="VehicleHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "owner_history",
                    models.IntegerField(
                        default=0,
                        help_text="Number of previous owners of the vehicle",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("ACCIDENT", "Accident"),
                            ("ODOMETER_FRAUD", "Odometer Fraud"),
                            ("THEFT", "Theft"),
                            ("RECALL", "Recall"),
                            ("REPAIR", "Repair"),
                            ("OTHER", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("event_date", models.DateField()),
                ("reported_date", models.DateField(blank=True, null=True)),
                ("description", models.TextField()),
                ("verified", models.BooleanField(default=False)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                (
                    "accident_severity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MINOR", "Minor"),
                            ("MAJOR", "Major"),
                            ("TOTAL_LOSS", "Total Loss"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "accident_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "police_report_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "insurance_claim_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "odometer_reading",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "fraud_type",
                    models.CharField(
                        blank=True,
                        choices=[("ROLLBACK", "Rollback"), ("TAMPERING", "Tampering")],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "reported_mileage",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "theft_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("recovery_date", models.DateField(blank=True, null=True)),
                (
                    "recovery_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("damage_during_theft", models.TextField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "reported_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reported_events",
                        to="users.user",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="history",
                        to="vehicles.vehicle",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_events",
                        to="users.user",
                    ),
                ),
            ],
            options={
                "verbose_name": "Vehicle History",
                "verbose_name_plural": "Vehicle History",
            },
        ),
    ]
