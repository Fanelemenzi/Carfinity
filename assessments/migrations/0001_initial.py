# Generated by Django 4.2.16 on 2025-09-19 02:43

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("maintenance_history", "0010_alter_inspections_options_initialinspection"),
        ("vehicles", "0008_alter_vehicle_plant_location"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="VehicleAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assessment_id",
                    models.CharField(db_index=True, max_length=50, unique=True),
                ),
                (
                    "assessment_type",
                    models.CharField(
                        choices=[
                            ("crash", "Crash Assessment"),
                            ("pre_purchase", "Pre-Purchase Assessment"),
                            ("periodic", "Periodic Assessment"),
                            ("insurance_claim", "Insurance Claim"),
                            ("total_loss", "Total Loss Assessment"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("under_review", "Under Review"),
                            ("completed", "Completed"),
                            ("disputed", "Disputed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("assessment_date", models.DateTimeField(auto_now_add=True)),
                ("completed_date", models.DateTimeField(blank=True, null=True)),
                ("assessor_name", models.CharField(max_length=100)),
                (
                    "assessor_certification",
                    models.CharField(blank=True, max_length=100),
                ),
                ("incident_location", models.CharField(blank=True, max_length=255)),
                ("incident_date", models.DateTimeField(blank=True, null=True)),
                ("weather_conditions", models.CharField(blank=True, max_length=100)),
                (
                    "overall_severity",
                    models.CharField(
                        choices=[
                            ("cosmetic", "Cosmetic"),
                            ("minor", "Minor"),
                            ("moderate", "Moderate"),
                            ("major", "Major"),
                            ("total_loss", "Total Loss"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "uk_write_off_category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("cat_a", "Category A - Total Loss/Scrap Only"),
                            ("cat_b", "Category B - Break for Parts Only"),
                            ("cat_s", "Category S - Structural Damage"),
                            ("cat_n", "Category N - Non-Structural Damage"),
                            ("not_applicable", "Not Applicable"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "south_africa_70_percent_rule",
                    models.BooleanField(
                        default=False, help_text="Exceeds 70% repair cost threshold"
                    ),
                ),
                (
                    "estimated_repair_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "vehicle_market_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "salvage_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("overall_notes", models.TextField(blank=True)),
                ("recommendations", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "maintenance_history",
                    models.ManyToManyField(
                        blank=True, to="maintenance_history.maintenancerecord"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assessments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assessments",
                        to="vehicles.vehicle",
                    ),
                ),
            ],
            options={
                "ordering": ["-assessment_date"],
            },
        ),
        migrations.CreateModel(
            name="WheelsAndTires",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "front_left_tire",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("front_left_tire_notes", models.TextField(blank=True)),
                (
                    "front_right_tire",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("front_right_tire_notes", models.TextField(blank=True)),
                (
                    "rear_left_tire",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("rear_left_tire_notes", models.TextField(blank=True)),
                (
                    "rear_right_tire",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("rear_right_tire_notes", models.TextField(blank=True)),
                (
                    "front_left_wheel",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("front_left_wheel_notes", models.TextField(blank=True)),
                (
                    "front_right_wheel",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("front_right_wheel_notes", models.TextField(blank=True)),
                (
                    "rear_left_wheel",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("rear_left_wheel_notes", models.TextField(blank=True)),
                (
                    "rear_right_wheel",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("rear_right_wheel_notes", models.TextField(blank=True)),
                (
                    "spare_tire",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("spare_tire_notes", models.TextField(blank=True)),
                (
                    "wheel_lug_nuts",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("wheel_lug_nuts_notes", models.TextField(blank=True)),
                (
                    "tire_pressure_sensors",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("tire_pressure_sensors_notes", models.TextField(blank=True)),
                (
                    "center_caps",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("center_caps_notes", models.TextField(blank=True)),
                (
                    "assessment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wheels_tires",
                        to="assessments.vehicleassessment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SafetySystems",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "airbag_systems",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("fault", "Fault Detected"),
                            ("deployed", "Deployed/Activated"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("airbag_systems_notes", models.TextField(blank=True)),
                (
                    "abs_system",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("fault", "Fault Detected"),
                            ("deployed", "Deployed/Activated"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("abs_system_notes", models.TextField(blank=True)),
                (
                    "stability_control",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("fault", "Fault Detected"),
                            ("deployed", "Deployed/Activated"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("stability_control_notes", models.TextField(blank=True)),
                (
                    "parking_sensors",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("fault", "Fault Detected"),
                            ("deployed", "Deployed/Activated"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("parking_sensors_notes", models.TextField(blank=True)),
                (
                    "backup_camera_system",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("fault", "Fault Detected"),
                            ("deployed", "Deployed/Activated"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("backup_camera_system_notes", models.TextField(blank=True)),
                (
                    "emergency_brake",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("fault", "Fault Detected"),
                            ("deployed", "Deployed/Activated"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("emergency_brake_notes", models.TextField(blank=True)),
                (
                    "assessment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="safety_systems",
                        to="assessments.vehicleassessment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RepairEstimate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "source_type",
                    models.CharField(
                        choices=[
                            ("ai_generated", "AI Generated"),
                            ("assessor", "Professional Assessor"),
                            ("repair_shop", "Repair Shop"),
                            ("dealer", "Dealer Service"),
                            ("independent", "Independent Mechanic"),
                            ("insurance", "Insurance Adjuster"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("revised", "Revised"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("shop_name", models.CharField(blank=True, max_length=200)),
                ("shop_contact", models.CharField(blank=True, max_length=200)),
                ("estimate_number", models.CharField(blank=True, max_length=50)),
                (
                    "parts_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "labor_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "paint_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "other_costs",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("total_cost", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "estimated_repair_days",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "parts_availability_days",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "repair_items",
                    models.JSONField(
                        default=list,
                        help_text="Detailed list of repair items with costs",
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assessment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="repair_estimates",
                        to="assessments.vehicleassessment",
                    ),
                ),
            ],
            options={
                "ordering": ["total_cost"],
            },
        ),
        migrations.CreateModel(
            name="MechanicalSystems",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "engine_block",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("engine_block_notes", models.TextField(blank=True)),
                (
                    "radiator",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("radiator_notes", models.TextField(blank=True)),
                (
                    "battery",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("battery_notes", models.TextField(blank=True)),
                (
                    "air_filter_housing",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("air_filter_housing_notes", models.TextField(blank=True)),
                (
                    "belts_and_hoses",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("belts_and_hoses_notes", models.TextField(blank=True)),
                (
                    "fluid_reservoirs",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("fluid_reservoirs_notes", models.TextField(blank=True)),
                (
                    "wiring_harnesses",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("wiring_harnesses_notes", models.TextField(blank=True)),
                (
                    "engine_mounts",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("engine_mounts_notes", models.TextField(blank=True)),
                (
                    "shock_absorbers",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("shock_absorbers_notes", models.TextField(blank=True)),
                (
                    "struts",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("struts_notes", models.TextField(blank=True)),
                (
                    "springs",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("springs_notes", models.TextField(blank=True)),
                (
                    "control_arms",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("control_arms_notes", models.TextField(blank=True)),
                (
                    "tie_rods",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("tie_rods_notes", models.TextField(blank=True)),
                (
                    "steering_rack",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("steering_rack_notes", models.TextField(blank=True)),
                (
                    "brake_lines",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("brake_lines_notes", models.TextField(blank=True)),
                (
                    "exhaust_manifold",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("exhaust_manifold_notes", models.TextField(blank=True)),
                (
                    "catalytic_converter",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("catalytic_converter_notes", models.TextField(blank=True)),
                (
                    "muffler",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("muffler_notes", models.TextField(blank=True)),
                (
                    "exhaust_pipes",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("exhaust_pipes_notes", models.TextField(blank=True)),
                (
                    "heat_shields",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("failed", "Failed"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("heat_shields_notes", models.TextField(blank=True)),
                (
                    "assessment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mechanical_systems",
                        to="assessments.vehicleassessment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InteriorDamage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "driver_seat",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("driver_seat_notes", models.TextField(blank=True)),
                (
                    "passenger_seat",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("passenger_seat_notes", models.TextField(blank=True)),
                (
                    "rear_seats",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("rear_seats_notes", models.TextField(blank=True)),
                (
                    "seat_belts",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("seat_belts_notes", models.TextField(blank=True)),
                (
                    "headrests",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("headrests_notes", models.TextField(blank=True)),
                (
                    "armrests",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("armrests_notes", models.TextField(blank=True)),
                (
                    "floor_mats",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("floor_mats_notes", models.TextField(blank=True)),
                (
                    "dashboard",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("dashboard_notes", models.TextField(blank=True)),
                (
                    "steering_wheel",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("steering_wheel_notes", models.TextField(blank=True)),
                (
                    "instrument_cluster",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("instrument_cluster_notes", models.TextField(blank=True)),
                (
                    "center_console",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("center_console_notes", models.TextField(blank=True)),
                (
                    "climate_controls",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("climate_controls_notes", models.TextField(blank=True)),
                (
                    "radio_infotainment",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("radio_infotainment_notes", models.TextField(blank=True)),
                (
                    "glove_compartment",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("glove_compartment_notes", models.TextField(blank=True)),
                (
                    "door_panels",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("door_panels_notes", models.TextField(blank=True)),
                (
                    "windshield",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("windshield_notes", models.TextField(blank=True)),
                (
                    "side_windows_interior",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("side_windows_interior_notes", models.TextField(blank=True)),
                (
                    "interior_mirrors",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("interior_mirrors_notes", models.TextField(blank=True)),
                (
                    "visors",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("visors_notes", models.TextField(blank=True)),
                (
                    "assessment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interior_damage",
                        to="assessments.vehicleassessment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FrameAndStructural",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "frame_rails",
                    models.CharField(
                        choices=[
                            ("intact", "Intact"),
                            ("minor_damage", "Minor Damage"),
                            ("moderate_damage", "Moderate Damage"),
                            ("severe_damage", "Severe Damage"),
                            ("compromised", "Structurally Compromised"),
                        ],
                        default="intact",
                        max_length=20,
                    ),
                ),
                ("frame_rails_notes", models.TextField(blank=True)),
                (
                    "cross_members",
                    models.CharField(
                        choices=[
                            ("intact", "Intact"),
                            ("minor_damage", "Minor Damage"),
                            ("moderate_damage", "Moderate Damage"),
                            ("severe_damage", "Severe Damage"),
                            ("compromised", "Structurally Compromised"),
                        ],
                        default="intact",
                        max_length=20,
                    ),
                ),
                ("cross_members_notes", models.TextField(blank=True)),
                (
                    "firewall",
                    models.CharField(
                        choices=[
                            ("intact", "Intact"),
                            ("minor_damage", "Minor Damage"),
                            ("moderate_damage", "Moderate Damage"),
                            ("severe_damage", "Severe Damage"),
                            ("compromised", "Structurally Compromised"),
                        ],
                        default="intact",
                        max_length=20,
                    ),
                ),
                ("firewall_notes", models.TextField(blank=True)),
                (
                    "floor_pans",
                    models.CharField(
                        choices=[
                            ("intact", "Intact"),
                            ("minor_damage", "Minor Damage"),
                            ("moderate_damage", "Moderate Damage"),
                            ("severe_damage", "Severe Damage"),
                            ("compromised", "Structurally Compromised"),
                        ],
                        default="intact",
                        max_length=20,
                    ),
                ),
                ("floor_pans_notes", models.TextField(blank=True)),
                (
                    "door_jambs",
                    models.CharField(
                        choices=[
                            ("intact", "Intact"),
                            ("minor_damage", "Minor Damage"),
                            ("moderate_damage", "Moderate Damage"),
                            ("severe_damage", "Severe Damage"),
                            ("compromised", "Structurally Compromised"),
                        ],
                        default="intact",
                        max_length=20,
                    ),
                ),
                ("door_jambs_notes", models.TextField(blank=True)),
                (
                    "trunk_floor",
                    models.CharField(
                        choices=[
                            ("intact", "Intact"),
                            ("minor_damage", "Minor Damage"),
                            ("moderate_damage", "Moderate Damage"),
                            ("severe_damage", "Severe Damage"),
                            ("compromised", "Structurally Compromised"),
                        ],
                        default="intact",
                        max_length=20,
                    ),
                ),
                ("trunk_floor_notes", models.TextField(blank=True)),
                (
                    "assessment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="frame_structural",
                        to="assessments.vehicleassessment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FluidSystems",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "engine_oil",
                    models.CharField(
                        choices=[
                            ("good", "Good"),
                            ("low", "Low Level"),
                            ("contaminated", "Contaminated"),
                            ("leaking", "Leaking"),
                            ("empty", "Empty"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("engine_oil_notes", models.TextField(blank=True)),
                (
                    "transmission_fluid",
                    models.CharField(
                        choices=[
                            ("good", "Good"),
                            ("low", "Low Level"),
                            ("contaminated", "Contaminated"),
                            ("leaking", "Leaking"),
                            ("empty", "Empty"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("transmission_fluid_notes", models.TextField(blank=True)),
                (
                    "brake_fluid",
                    models.CharField(
                        choices=[
                            ("good", "Good"),
                            ("low", "Low Level"),
                            ("contaminated", "Contaminated"),
                            ("leaking", "Leaking"),
                            ("empty", "Empty"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("brake_fluid_notes", models.TextField(blank=True)),
                (
                    "coolant",
                    models.CharField(
                        choices=[
                            ("good", "Good"),
                            ("low", "Low Level"),
                            ("contaminated", "Contaminated"),
                            ("leaking", "Leaking"),
                            ("empty", "Empty"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("coolant_notes", models.TextField(blank=True)),
                (
                    "power_steering_fluid",
                    models.CharField(
                        choices=[
                            ("good", "Good"),
                            ("low", "Low Level"),
                            ("contaminated", "Contaminated"),
                            ("leaking", "Leaking"),
                            ("empty", "Empty"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("power_steering_fluid_notes", models.TextField(blank=True)),
                (
                    "windshield_washer_fluid",
                    models.CharField(
                        choices=[
                            ("good", "Good"),
                            ("low", "Low Level"),
                            ("contaminated", "Contaminated"),
                            ("leaking", "Leaking"),
                            ("empty", "Empty"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("windshield_washer_fluid_notes", models.TextField(blank=True)),
                (
                    "assessment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fluid_systems",
                        to="assessments.vehicleassessment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExteriorBodyDamage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "front_bumper",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("front_bumper_notes", models.TextField(blank=True)),
                (
                    "hood",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("hood_notes", models.TextField(blank=True)),
                (
                    "front_grille",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("front_grille_notes", models.TextField(blank=True)),
                (
                    "headlight_housings",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("headlight_housings_notes", models.TextField(blank=True)),
                (
                    "headlight_lenses",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("headlight_lenses_notes", models.TextField(blank=True)),
                (
                    "front_fenders",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("front_fenders_notes", models.TextField(blank=True)),
                (
                    "front_quarter_panels",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("front_quarter_panels_notes", models.TextField(blank=True)),
                (
                    "fog_light_housings",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("fog_light_housings_notes", models.TextField(blank=True)),
                (
                    "license_plate_bracket",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("license_plate_bracket_notes", models.TextField(blank=True)),
                (
                    "front_spoiler_air_dam",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("front_spoiler_air_dam_notes", models.TextField(blank=True)),
                (
                    "driver_side_door",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("driver_side_door_notes", models.TextField(blank=True)),
                (
                    "passenger_side_door",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("passenger_side_door_notes", models.TextField(blank=True)),
                (
                    "rear_doors",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("rear_doors_notes", models.TextField(blank=True)),
                (
                    "door_frames",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("door_frames_notes", models.TextField(blank=True)),
                (
                    "side_mirrors",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("side_mirrors_notes", models.TextField(blank=True)),
                (
                    "side_moldings_trim",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("side_moldings_trim_notes", models.TextField(blank=True)),
                (
                    "rocker_panels",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("rocker_panels_notes", models.TextField(blank=True)),
                (
                    "wheel_well_liners",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("wheel_well_liners_notes", models.TextField(blank=True)),
                (
                    "side_windows",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("side_windows_notes", models.TextField(blank=True)),
                (
                    "door_handles",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("door_handles_notes", models.TextField(blank=True)),
                (
                    "rear_bumper",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("rear_bumper_notes", models.TextField(blank=True)),
                (
                    "trunk_hatch",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("trunk_hatch_notes", models.TextField(blank=True)),
                (
                    "rear_quarter_panels",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("rear_quarter_panels_notes", models.TextField(blank=True)),
                (
                    "taillight_housings",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("taillight_housings_notes", models.TextField(blank=True)),
                (
                    "taillight_lenses",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("taillight_lenses_notes", models.TextField(blank=True)),
                (
                    "rear_window",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("rear_window_notes", models.TextField(blank=True)),
                (
                    "rear_spoiler",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("rear_spoiler_notes", models.TextField(blank=True)),
                (
                    "exhaust_tips",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("exhaust_tips_notes", models.TextField(blank=True)),
                (
                    "rear_license_plate_area",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("rear_license_plate_area_notes", models.TextField(blank=True)),
                (
                    "backup_camera",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("backup_camera_notes", models.TextField(blank=True)),
                (
                    "roof_panel",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("roof_panel_notes", models.TextField(blank=True)),
                (
                    "a_pillars",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("a_pillars_notes", models.TextField(blank=True)),
                (
                    "b_pillars",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("b_pillars_notes", models.TextField(blank=True)),
                (
                    "c_pillars",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("c_pillars_notes", models.TextField(blank=True)),
                (
                    "d_pillars",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("d_pillars_notes", models.TextField(blank=True)),
                (
                    "roof_rails",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("roof_rails_notes", models.TextField(blank=True)),
                (
                    "sunroof_moonroof",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("sunroof_moonroof_notes", models.TextField(blank=True)),
                (
                    "antenna",
                    models.CharField(
                        choices=[
                            ("none", "No Damage"),
                            ("light", "Light Damage"),
                            ("moderate", "Moderate Damage"),
                            ("severe", "Severe Damage"),
                            ("destroyed", "Destroyed"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("antenna_notes", models.TextField(blank=True)),
                (
                    "assessment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exterior_damage",
                        to="assessments.vehicleassessment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ElectricalSystems",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "headlight_function",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("intermittent", "Intermittent"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("headlight_function_notes", models.TextField(blank=True)),
                (
                    "taillight_function",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("intermittent", "Intermittent"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("taillight_function_notes", models.TextField(blank=True)),
                (
                    "interior_lighting",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("intermittent", "Intermittent"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("interior_lighting_notes", models.TextField(blank=True)),
                (
                    "warning_lights",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("intermittent", "Intermittent"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("warning_lights_notes", models.TextField(blank=True)),
                (
                    "horn",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("intermittent", "Intermittent"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("horn_notes", models.TextField(blank=True)),
                (
                    "power_windows",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("intermittent", "Intermittent"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("power_windows_notes", models.TextField(blank=True)),
                (
                    "power_locks",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("intermittent", "Intermittent"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("power_locks_notes", models.TextField(blank=True)),
                (
                    "air_conditioning",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("intermittent", "Intermittent"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("air_conditioning_notes", models.TextField(blank=True)),
                (
                    "heating_system",
                    models.CharField(
                        choices=[
                            ("working", "Working"),
                            ("intermittent", "Intermittent"),
                            ("not_working", "Not Working"),
                            ("not_tested", "Not Tested"),
                        ],
                        default="working",
                        max_length=20,
                    ),
                ),
                ("heating_system_notes", models.TextField(blank=True)),
                (
                    "assessment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="electrical_systems",
                        to="assessments.vehicleassessment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DocumentationAndIdentification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vin_plate",
                    models.CharField(
                        choices=[
                            ("present", "Present and Readable"),
                            ("damaged", "Present but Damaged"),
                            ("missing", "Missing"),
                            ("tampered", "Evidence of Tampering"),
                        ],
                        default="present",
                        max_length=20,
                    ),
                ),
                ("vin_plate_notes", models.TextField(blank=True)),
                (
                    "door_jamb_stickers",
                    models.CharField(
                        choices=[
                            ("present", "Present and Readable"),
                            ("damaged", "Present but Damaged"),
                            ("missing", "Missing"),
                            ("tampered", "Evidence of Tampering"),
                        ],
                        default="present",
                        max_length=20,
                    ),
                ),
                ("door_jamb_stickers_notes", models.TextField(blank=True)),
                (
                    "emissions_stickers",
                    models.CharField(
                        choices=[
                            ("present", "Present and Readable"),
                            ("damaged", "Present but Damaged"),
                            ("missing", "Missing"),
                            ("tampered", "Evidence of Tampering"),
                        ],
                        default="present",
                        max_length=20,
                    ),
                ),
                ("emissions_stickers_notes", models.TextField(blank=True)),
                (
                    "maintenance_records",
                    models.CharField(
                        choices=[
                            ("present", "Present and Readable"),
                            ("damaged", "Present but Damaged"),
                            ("missing", "Missing"),
                            ("tampered", "Evidence of Tampering"),
                        ],
                        default="present",
                        max_length=20,
                    ),
                ),
                ("maintenance_records_notes", models.TextField(blank=True)),
                (
                    "assessment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documentation",
                        to="assessments.vehicleassessment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AssessmentWorkflow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "step",
                    models.CharField(
                        choices=[
                            ("submitted", "Assessment Submitted"),
                            ("assigned", "Assigned to Assessor"),
                            ("photos_uploaded", "Photos Uploaded"),
                            ("ai_analysis_complete", "AI Analysis Complete"),
                            ("human_review", "Human Review"),
                            ("quality_check", "Quality Check"),
                            ("customer_notification", "Customer Notified"),
                            ("insurance_submitted", "Submitted to Insurance"),
                            ("completed", "Assessment Completed"),
                            ("disputed", "Assessment Disputed"),
                            ("revised", "Assessment Revised"),
                            ("closed", "Assessment Closed"),
                        ],
                        max_length=30,
                    ),
                ),
                ("completed_at", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(
                        blank=True, help_text="Time spent on this step", null=True
                    ),
                ),
                (
                    "assessment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workflow_steps",
                        to="assessments.vehicleassessment",
                    ),
                ),
                (
                    "completed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["assessment", "completed_at"],
            },
        ),
        migrations.CreateModel(
            name="AssessmentReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("preliminary", "Preliminary Assessment"),
                            ("detailed", "Detailed Assessment"),
                            ("insurance_claim", "Insurance Claim Report"),
                            ("pre_purchase", "Pre-Purchase Report"),
                            ("expert_witness", "Expert Witness Report"),
                            ("total_loss", "Total Loss Assessment"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("pending_review", "Pending Review"),
                            ("approved", "Approved"),
                            ("sent", "Sent to Client"),
                            ("disputed", "Disputed"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("executive_summary", models.TextField()),
                ("detailed_findings", models.TextField()),
                ("recommendations", models.TextField()),
                (
                    "total_damage_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("repair_cost_breakdown", models.JSONField(blank=True, default=dict)),
                (
                    "parts_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "labor_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "pdf_report",
                    models.FileField(
                        blank=True, null=True, upload_to="assessment_reports/%Y/%m/"
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assessment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="assessments.vehicleassessment",
                    ),
                ),
                (
                    "generated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="generated_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-generated_at"],
            },
        ),
        migrations.CreateModel(
            name="AssessmentPhoto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("overall", "Overall Vehicle"),
                            ("damage", "Damage Detail"),
                            ("interior", "Interior"),
                            ("engine", "Engine Bay"),
                            ("undercarriage", "Undercarriage"),
                            ("documents", "Documentation"),
                            ("vin", "VIN Plate"),
                            ("odometer", "Odometer Reading"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("image", models.ImageField(upload_to="assessment_photos/%Y/%m/%d/")),
                ("description", models.CharField(blank=True, max_length=255)),
                ("taken_at", models.DateTimeField(auto_now_add=True)),
                (
                    "gps_latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "gps_longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("device_info", models.CharField(blank=True, max_length=100)),
                (
                    "assessment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="assessments.vehicleassessment",
                    ),
                ),
            ],
            options={
                "ordering": ["category", "taken_at"],
            },
        ),
        migrations.CreateModel(
            name="AssessmentIntegration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "integration_type",
                    models.CharField(
                        choices=[
                            ("insurance_system", "Insurance System"),
                            ("dvla", "DVLA System"),
                            ("hpi_check", "HPI Check"),
                            ("vin_decoder", "VIN Decoder"),
                            ("parts_system", "Parts Pricing System"),
                            ("repair_network", "Repair Network"),
                            ("rental_car", "Rental Car System"),
                            ("towing", "Towing Service"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("partial", "Partial Success"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("external_reference", models.CharField(blank=True, max_length=100)),
                ("request_data", models.JSONField(blank=True, default=dict)),
                ("response_data", models.JSONField(blank=True, default=dict)),
                ("error_message", models.TextField(blank=True)),
                ("initiated_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assessment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="integrations",
                        to="assessments.vehicleassessment",
                    ),
                ),
            ],
            options={
                "ordering": ["-initiated_at"],
            },
        ),
        migrations.CreateModel(
            name="AssessmentComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "comment_type",
                    models.CharField(
                        choices=[
                            ("internal", "Internal Note"),
                            ("customer", "Customer Communication"),
                            ("adjuster", "Adjuster Note"),
                            ("repair_shop", "Repair Shop Input"),
                            ("expert", "Expert Opinion"),
                            ("dispute", "Dispute Resolution"),
                        ],
                        max_length=20,
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=200)),
                ("content", models.TextField()),
                ("is_important", models.BooleanField(default=False)),
                ("requires_action", models.BooleanField(default=False)),
                ("is_customer_visible", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assessment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="assessments.vehicleassessment",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="vehicleassessment",
            index=models.Index(
                fields=["assessment_id"], name="assessments_assessm_5e9f4a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vehicleassessment",
            index=models.Index(
                fields=["status", "assessment_date"],
                name="assessments_status_f4169a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vehicleassessment",
            index=models.Index(
                fields=["vehicle", "assessment_date"],
                name="assessments_vehicle_17cb51_idx",
            ),
        ),
    ]
