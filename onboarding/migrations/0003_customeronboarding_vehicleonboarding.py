# Generated by Django 4.2.16 on 2025-09-03 03:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("onboarding", "0002_pendingvehicleonboarding_image_data"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomerOnboarding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "customer_type",
                    models.CharField(
                        choices=[
                            ("individual", "Individual Owner"),
                            ("small_business", "Small Business (2-10 vehicles)"),
                            ("medium_business", "Medium Business (11-50 vehicles)"),
                            ("large_fleet", "Large Fleet (50+ vehicles)"),
                        ],
                        help_text="What type of customer are you?",
                        max_length=20,
                    ),
                ),
                (
                    "preferred_communication",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS/Text"),
                            ("phone", "Phone Call"),
                            ("app_notification", "In-App Notification"),
                        ],
                        default="email",
                        help_text="How would you prefer to receive maintenance reminders?",
                        max_length=20,
                    ),
                ),
                (
                    "reminder_frequency",
                    models.CharField(
                        choices=[
                            ("weekly", "Weekly"),
                            ("biweekly", "Bi-weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                        ],
                        default="monthly",
                        help_text="How often would you like maintenance reminders?",
                        max_length=15,
                    ),
                ),
                (
                    "service_radius",
                    models.CharField(
                        choices=[
                            ("5", "Within 5 miles"),
                            ("10", "Within 10 miles"),
                            ("15", "Within 15 miles"),
                            ("25", "Within 25 miles"),
                            ("50", "Within 50 miles"),
                        ],
                        help_text="How far are you willing to travel for service, or have mobile service come to you?",
                        max_length=5,
                    ),
                ),
                (
                    "monthly_maintenance_budget",
                    models.CharField(
                        choices=[
                            ("under_50", "Under $50/month"),
                            ("50_100", "$50-100/month"),
                            ("100_200", "$100-200/month"),
                            ("200_500", "$200-500/month"),
                            ("over_500", "Over $500/month"),
                            ("as_needed", "Pay as needed (no budget)"),
                        ],
                        help_text="What's your approximate monthly budget for vehicle maintenance?",
                        max_length=15,
                    ),
                ),
                (
                    "mobile_service_interest",
                    models.BooleanField(
                        default=False,
                        help_text="Are you interested in mobile mechanic services (we come to you)?",
                    ),
                ),
                (
                    "emergency_service_interest",
                    models.BooleanField(
                        default=False,
                        help_text="Would you like 24/7 emergency roadside assistance?",
                    ),
                ),
                (
                    "maintenance_knowledge",
                    models.CharField(
                        choices=[
                            (
                                "beginner",
                                "Beginner - I know very little about car maintenance",
                            ),
                            ("intermediate", "Intermediate - I know basic maintenance"),
                            ("advanced", "Advanced - I do some repairs myself"),
                            ("expert", "Expert - I handle most maintenance myself"),
                        ],
                        help_text="How would you describe your car maintenance knowledge?",
                        max_length=15,
                    ),
                ),
                (
                    "current_mechanic",
                    models.CharField(
                        blank=True,
                        help_text="Do you currently have a trusted mechanic or service center? (Optional)",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "maintenance_tracking_method",
                    models.CharField(
                        blank=True,
                        help_text="How do you currently track vehicle maintenance? (e.g., spreadsheet, app, paper records, don't track)",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "biggest_maintenance_challenge",
                    models.TextField(
                        blank=True,
                        help_text="What's your biggest challenge with vehicle maintenance? (Optional)",
                        null=True,
                    ),
                ),
                (
                    "primary_goal",
                    models.CharField(
                        choices=[
                            ("save_money", "Save money on repairs"),
                            ("extend_vehicle_life", "Extend vehicle lifespan"),
                            ("avoid_breakdowns", "Avoid unexpected breakdowns"),
                            ("maintain_warranty", "Maintain warranty coverage"),
                            ("improve_safety", "Improve vehicle safety"),
                            ("better_fuel_economy", "Improve fuel economy"),
                            ("convenience", "Make maintenance more convenient"),
                        ],
                        help_text="What's your primary goal for vehicle maintenance?",
                        max_length=25,
                    ),
                ),
                (
                    "service_priority",
                    models.CharField(
                        choices=[
                            ("convenience", "Convenience"),
                            ("cost", "Cost"),
                            ("service_quality", "Service Quality"),
                        ],
                        help_text="What's most important to you: convenience, cost, or service quality?",
                        max_length=15,
                    ),
                ),
                (
                    "preferred_payment_model",
                    models.CharField(
                        choices=[
                            ("subscription", "Subscription maintenance plans"),
                            ("pay_per_service", "Pay-per-service"),
                            ("both", "Both options interest me"),
                        ],
                        help_text="Are you interested in subscription maintenance plans or pay-per-service?",
                        max_length=20,
                    ),
                ),
                (
                    "parts_preference",
                    models.CharField(
                        choices=[
                            ("oem_only", "OEM parts only"),
                            (
                                "quality_aftermarket",
                                "Quality aftermarket parts acceptable",
                            ),
                            ("cost_effective", "Most cost-effective option"),
                        ],
                        help_text="Do you prefer OEM parts or are quality aftermarket parts acceptable?",
                        max_length=20,
                    ),
                ),
                (
                    "auto_insurance_provider",
                    models.CharField(
                        blank=True,
                        help_text="Who is your current auto insurance provider?",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "vehicle_under_warranty",
                    models.BooleanField(
                        default=False,
                        help_text="Is your vehicle still under manufacturer warranty?",
                    ),
                ),
                (
                    "extended_warranty_interest",
                    models.CharField(
                        choices=[
                            ("very_interested", "Very interested"),
                            ("somewhat_interested", "Somewhat interested"),
                            ("not_interested", "Not interested"),
                            (
                                "already_have",
                                "Already have extended warranty/service protection",
                            ),
                        ],
                        help_text="Are you interested in extended warranty or service protection plans?",
                        max_length=20,
                    ),
                ),
                (
                    "how_heard_about_service",
                    models.CharField(
                        choices=[
                            ("google_search", "Google search"),
                            ("social_media", "Social media"),
                            ("friend_family", "Friend or family member"),
                            ("online_ad", "Online advertisement"),
                            ("mechanic_referral", "Mechanic referral"),
                            ("app_store", "App store"),
                            ("other", "Other"),
                        ],
                        help_text="How did you hear about our service?",
                        max_length=20,
                    ),
                ),
                (
                    "potential_referrals",
                    models.BooleanField(
                        default=False,
                        help_text="Do you know others who might benefit from our services?",
                    ),
                ),
                (
                    "interested_in_referral_rewards",
                    models.BooleanField(
                        default=False,
                        help_text="Would you be interested in earning referral rewards?",
                    ),
                ),
                ("completed_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VehicleOnboarding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vin_number",
                    models.CharField(
                        help_text="Vehicle Identification Number (17 characters)",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-HJ-NPR-Z0-9]{17}$",
                                "Enter a valid 17-character VIN",
                            )
                        ],
                    ),
                ),
                (
                    "make",
                    models.CharField(
                        blank=True,
                        help_text="Vehicle make (e.g., Toyota, Ford)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        blank=True,
                        help_text="Vehicle model (e.g., Camry, F-150)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        blank=True,
                        help_text="Model year",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(2030),
                        ],
                    ),
                ),
                (
                    "primary_usage",
                    models.CharField(
                        choices=[
                            ("daily_commute", "Daily commuting"),
                            ("weekend_only", "Weekend/recreational use"),
                            ("business", "Business/work vehicle"),
                            ("family_trips", "Family trips and errands"),
                            ("delivery", "Delivery/commercial use"),
                            ("emergency_only", "Emergency/backup vehicle"),
                        ],
                        help_text="How do you primarily use this vehicle?",
                        max_length=20,
                    ),
                ),
                (
                    "current_odometer",
                    models.PositiveIntegerField(
                        help_text="Current odometer reading (miles)"
                    ),
                ),
                (
                    "estimated_annual_mileage",
                    models.CharField(
                        choices=[
                            ("under_5k", "Under 5,000 miles/year"),
                            ("5k_10k", "5,000-10,000 miles/year"),
                            ("10k_15k", "10,000-15,000 miles/year"),
                            ("15k_20k", "15,000-20,000 miles/year"),
                            ("20k_25k", "20,000-25,000 miles/year"),
                            ("over_25k", "Over 25,000 miles/year"),
                        ],
                        help_text="Approximately how many miles do you drive this vehicle per year?",
                        max_length=10,
                    ),
                ),
                (
                    "typical_driving_conditions",
                    models.CharField(
                        choices=[
                            ("city_mostly", "Mostly city/stop-and-go traffic"),
                            ("highway_mostly", "Mostly highway/long distance"),
                            ("mixed", "Mixed city and highway"),
                            ("rural", "Rural/country roads"),
                            (
                                "harsh",
                                "Harsh conditions (extreme weather, mountains, towing)",
                            ),
                        ],
                        help_text="What describes your typical driving conditions?",
                        max_length=15,
                    ),
                ),
                (
                    "current_condition",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent - Like new"),
                            ("good", "Good - Well maintained"),
                            ("fair", "Fair - Some issues but runs well"),
                            ("poor", "Poor - Frequent problems"),
                            ("unknown", "Unknown - Recently acquired"),
                        ],
                        help_text="How would you describe the current condition of this vehicle?",
                        max_length=10,
                    ),
                ),
                (
                    "last_oil_change",
                    models.DateField(
                        blank=True,
                        help_text="When was the last oil change? (Optional if unknown)",
                        null=True,
                    ),
                ),
                (
                    "last_major_service",
                    models.DateField(
                        blank=True,
                        help_text="When was the last major service/tune-up? (Optional if unknown)",
                        null=True,
                    ),
                ),
                (
                    "current_problems",
                    models.TextField(
                        blank=True,
                        help_text="Are there any current problems or concerns with this vehicle? (Optional)",
                        null=True,
                    ),
                ),
                (
                    "under_warranty",
                    models.BooleanField(
                        default=False,
                        help_text="Is this vehicle currently under manufacturer warranty?",
                    ),
                ),
                (
                    "warranty_expires",
                    models.DateField(
                        blank=True,
                        help_text="When does the warranty expire? (If applicable)",
                        null=True,
                    ),
                ),
                (
                    "maintenance_preference",
                    models.CharField(
                        choices=[
                            ("cost_effective", "Most cost-effective options"),
                            ("oem_parts", "OEM parts and dealer service"),
                            ("performance", "Performance and reliability focused"),
                            ("eco_friendly", "Environmentally conscious options"),
                            ("quick_turnaround", "Fastest service possible"),
                        ],
                        help_text="What's most important for maintaining this vehicle?",
                        max_length=20,
                    ),
                ),
                (
                    "vehicle_nickname",
                    models.CharField(
                        blank=True,
                        help_text="Optional nickname for this vehicle (e.g., 'Work Truck', 'Family Car')",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer_onboarding",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicles",
                        to="onboarding.customeronboarding",
                    ),
                ),
            ],
            options={
                "unique_together": {("customer_onboarding", "vin_number")},
            },
        ),
    ]
